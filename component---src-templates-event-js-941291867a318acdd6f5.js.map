{"version":3,"sources":["webpack:///./src/assets/images/calendar.inline.svg","webpack:///./src/templates/events.module.scss","webpack:///./src/assets/images/location-pin.inline.svg","webpack:///./src/templates/event.js"],"names":["React","CalendarInline","props","createElement","defaultProps","module","exports","default","LocationPinInline","pageQuery","Event","event","data","allPrismicEvent","edges","node","mappedDownloads","body","items","map","download","key","uuid","className","styles","button","to","file","url","s","filename","text","claim","name","imageLeft","alt","image","fluid","localFile","childImageSharp","imageRight","image_right","narrow","details","date","icon","calendar","location","pin","description","downloads"],"mappings":"gFAAA,IAAIA,EAAQ,EAAQ,QAEpB,SAASC,EAAgBC,GACrB,OAAOF,EAAMG,cAAc,MAAMD,EAAMF,EAAMG,cAAc,OAAO,CAAC,GAAK,qBAAqB,EAAI,iKAAiK,UAAY,mBAAmB,KAAO,aAG5SF,EAAeG,aAAe,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,aAEpEC,EAAOC,QAAUL,EAEjBA,EAAeM,QAAUN,G,uBCTzBI,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,QAAU,gCAAgC,KAAO,6BAA6B,SAAW,iCAAiC,SAAW,iCAAiC,IAAM,4BAA4B,KAAO,6BAA6B,UAAY,kCAAkC,OAAS,iC,qBCD3V,IAAIN,EAAQ,EAAQ,QAEpB,SAASQ,EAAmBN,GACxB,OAAOF,EAAMG,cAAc,MAAMD,EAAMF,EAAMG,cAAc,OAAO,CAAC,GAAK,gBAAgB,EAAI,qHAAqH,UAAY,mBAAmB,KAAO,aAG3PK,EAAkBJ,aAAe,CAAC,MAAQ,KAAK,OAAS,KAAK,QAAU,aAEvEC,EAAOC,QAAUE,EAEjBA,EAAkBD,QAAUC,G,kCCV5B,gLA4EaC,EAAS,WAePC,UA9ED,SAAC,GAAc,IACbC,EADY,EAAXC,KACcC,gBAAgBC,MAAM,GAAGC,KAA9CH,KAEJI,EAAkB,KAiBtB,OAhBIL,EAAMM,KAAK,IAAMN,EAAMM,KAAK,GAAGC,QACjCF,EAAkBL,EAAMM,KAAK,GAAGC,MAAMC,KAAI,SAACC,GACzC,OACE,wBAAC,IAAD,CACEC,IAAKC,cACLC,UAAWC,IAAOC,OAClBC,GAAIN,EAASO,KAAKC,IAClBR,UAAQ,EACRS,GAAC,GAEAT,EAASU,SAASC,UAOzB,wBAAC,IAAD,KACE,wBAAC,IAAD,CACEC,MAAOrB,EAAMsB,KACbC,UAAW,CACTC,IAAKxB,EAAMyB,MAAMD,IACjBE,MAAO1B,EAAMyB,MAAME,UAAUC,gBAAgBF,OAE/CG,WAAY,CACVL,IAAKxB,EAAM8B,YAAYN,IACvBE,MAAO1B,EAAM8B,YAAYH,UAAUC,gBAAgBF,SAIvD,wBAAC,IAAD,CAAWK,QAAM,GACf,+BAAKnB,UAAWC,IAAOmB,SACrB,wBAAC,IAAD,CAAMpB,UAAWC,IAAOoB,MACtB,+BAAKrB,UAAWC,IAAOqB,MACrB,wBAAC,IAAD,CAAUtB,UAAWC,IAAOsB,YAE7BnC,EAAMiC,KAAKb,MAEd,wBAAC,IAAD,CAAMR,UAAWC,IAAOuB,UACtB,+BAAKxB,UAAWC,IAAOqB,MACrB,wBAAC,IAAD,CAAatB,UAAWC,IAAOwB,OAEhCrC,EAAMoC,SAAShB,MAElB,wBAAC,IAAD,CAAMR,UAAWC,IAAOyB,aAActC,EAAMsC,YAAYlB,SAGvDf,GACD,+BAAKO,UAAWC,IAAO0B,WAAYlC","file":"component---src-templates-event-js-941291867a318acdd6f5.js","sourcesContent":["var React = require('react');\n\nfunction CalendarInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"id\":\"ic_event_note_24px\",\"d\":\"M17,10H7v2H17Zm2-7H18V1H16V3H8V1H6V3H5A1.991,1.991,0,0,0,3.01,5L3,19a2,2,0,0,0,2,2H19a2.006,2.006,0,0,0,2-2V5A2.006,2.006,0,0,0,19,3Zm0,16H5V8H19Zm-5-5H7v2h7Z\",\"transform\":\"translate(-3 -1)\",\"fill\":\"#131313\"}));\n}\n\nCalendarInline.defaultProps = {\"width\":\"18\",\"height\":\"20\",\"viewBox\":\"0 0 18 20\"};\n\nmodule.exports = CalendarInline;\n\nCalendarInline.default = CalendarInline;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"events-module--image--29wyQ\",\"details\":\"events-module--details--1ZDBY\",\"date\":\"events-module--date--3o1ju\",\"calendar\":\"events-module--calendar--tMVnQ\",\"location\":\"events-module--location--3Pz0P\",\"pin\":\"events-module--pin--DHN8p\",\"icon\":\"events-module--icon--1dehF\",\"downloads\":\"events-module--downloads--r5Bw3\",\"button\":\"events-module--button--h12gC\"};","var React = require('react');\n\nfunction LocationPinInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"id\":\"ic_place_24px\",\"d\":\"M12,2A7,7,0,0,0,5,9c0,5.25,7,13,7,13s7-7.75,7-13A7,7,0,0,0,12,2Zm0,9.5A2.5,2.5,0,1,1,14.5,9,2.5,2.5,0,0,1,12,11.5Z\",\"transform\":\"translate(-5 -2)\",\"fill\":\"#131313\"}));\n}\n\nLocationPinInline.defaultProps = {\"width\":\"14\",\"height\":\"20\",\"viewBox\":\"0 0 14 20\"};\n\nmodule.exports = LocationPinInline;\n\nLocationPinInline.default = LocationPinInline;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from 'src/components/Layout'\nimport { Container, Text, Button } from 'src/components/Base'\nimport Atf from 'src/sections/Atf'\nimport { v4 as uuid } from 'uuid'\n\nimport LocationPin from 'src/assets/images/location-pin.inline.svg'\nimport Calendar from 'src/assets/images/calendar.inline.svg'\n\nimport styles from './events.module.scss'\n\nconst Event = ({ data }) => {\n  const { data: event } = data.allPrismicEvent.edges[0].node\n\n  let mappedDownloads = null\n  if (event.body[0] && event.body[0].items) {\n    mappedDownloads = event.body[0].items.map((download) => {\n      return (\n        <Button\n          key={uuid()}\n          className={styles.button}\n          to={download.file.url}\n          download\n          s\n        >\n          {download.filename.text}\n        </Button>\n      )\n    })\n  }\n\n  return (\n    <Layout>\n      <Atf\n        claim={event.name}\n        imageLeft={{\n          alt: event.image.alt,\n          fluid: event.image.localFile.childImageSharp.fluid,\n        }}\n        imageRight={{\n          alt: event.image_right.alt,\n          fluid: event.image_right.localFile.childImageSharp.fluid,\n        }}\n      />\n\n      <Container narrow>\n        <div className={styles.details}>\n          <Text className={styles.date}>\n            <div className={styles.icon}>\n              <Calendar className={styles.calendar} />\n            </div>\n            {event.date.text}\n          </Text>\n          <Text className={styles.location}>\n            <div className={styles.icon}>\n              <LocationPin className={styles.pin} />\n            </div>\n            {event.location.text}\n          </Text>\n          <Text className={styles.description}>{event.description.text}</Text>\n        </div>\n\n        {!!mappedDownloads && (\n          <div className={styles.downloads}>{mappedDownloads}</div>\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nEvent.propTypes = {\n  uid: PropTypes.string,\n}\n\nexport const pageQuery = graphql`\n  query EventByUid($uid: String!) {\n    allPrismicEvent(filter: { uid: { eq: $uid } }) {\n      edges {\n        node {\n          data {\n            ...EventData\n            ...EventDownloads\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Event\n"],"sourceRoot":""}